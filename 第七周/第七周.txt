image inpainting（图像修复）
移除一些不想让其显示出来的东西，比如裂痕、还有想PS掉的人物（our ex-friend Trotsky……）
那么在移除之后，还要把其背后的东西补上
要让观众看起来不觉得违和。除了计算机的技术，还必须要人类的智能：人机交互完成。
比如一排椅子前面有一个人，中间应该有一把椅子被他挡住了；
那么要把他PS掉，后面就应该补上一把相同款式的椅子。

仿生学的知识：动物有拟态，可以把自己和环境融为一体
自己背后挡住了什么场景，就在身前把这些场景拟合出来。甚至可以拟合出一些精细的纹路
另外，以前讲过，人的视网膜也有一个盲点，上面没有视觉细胞
但是这部分丢失的信息，会被大脑拟合出来
PPT的例子：在一米之外，紧盯图片上的X，会发现太阳消失了（视觉系统不再修补那里的图像）
似乎需要捂住一只眼睛？我捂住左眼，右眼正对X。紧盯一会，实验成功了。

————————————————————————————————————————————————————

PDE方法
Inpainting Paradiam：要输入两张图像
一是原图，二是一张二值图像：白色部分是要隐去的地方，黑色部分予以保留
需要用户指定：这个方法不负责做图像检测，因为要PS掉哪一部分，这是非常主观的

conservator inpaint
首先，看看外部有没有边缘会穿过要隐去的区域。将其拟合出来（边缘的几何延拓）
然后，在边缘外部和内部分别进行颜色的扩散，作为修复

边缘延拓使用PDE来实现。然而不是延宕边缘本身，而是各个区域：自然地将边缘延续

设扩散方向为法向n，信息梯度为∇L
目标：∇L点乘n = 0
一般而言，n = ∇I⊥，即梯度方向的垂直：边缘方向（没有归一化为单位长度）
设∂I/∂t = ∇L点乘n，然后用欧拉-拉格朗日方程……
当这个值接近0时，模拟到稳态

希望达到的效果：边缘 等价于 信息L保持不变
那么，L应该是什么呢？smoothness estimator：用Laplacian，把所有二阶导数加起来
为什么L不用一阶梯度的模长|∇I| = ΔI呢？它也能反映平滑度啊？（上下三角真容易搞错）
因为这样的话，L = ∇I 垂直于 n = ∇I⊥
可以大概认为∇L 平行于 n
而一张边缘分明的图片，∇L 是平行于 n 的。公式与我们的期望不符。
同时，阶数更高，也能反映更多信息

甚至可以故意传输部分错误的图像，以此增加图像压缩率；传输到了以后，再使用图像修复
颜色梯度：可以RGB三个通道分别算，可以转成HSV三个通道分别算，等等

————————————————————————————————————————————————————

最后，加上一定的噪声/做一定的平滑，模拟原来的图像效果

————————————————————————————————————————————————————

Smart Cut-and-Paste
PDE适合修复平滑（smooth）的区域，但是无法修补细致的纹路
回忆：non-local-mean方法

作业
1. 假如L就是I本身而不是拉普拉斯算子，n = ∇I⊥？
∇L = ∇I 垂直于 n = ∇I⊥，本来就成立
我本来选的是The inpainted region will be constant.但不对。看来他是想用
Any inpainted region will solve the basic equation ∇L∙N⃗ =0 for this choice.
表示“本来就成立”

2. 在具有像素总数M的图像中，考虑要修复缺失区域（缺失N像素）。 
在“Smart Cut-and-Paste”算法中，如果每个match修复一个像素，则需要执行多少次patch的比较？ 仅考虑数量级，例如忽略图像边界。
为了修复一个像素，假设缺失区域为N = H*W，那么邻域X取多大？N还是M？应该是M
在这个邻域里用窗口滑动，得到X个邻域
扫描完M个邻域（每个邻域的大小为N），选出最相似的一个，然后进行修复
重复N次，一共扫描MN

3. 拉普拉斯算子（Laplace Operator）是n维欧几里德空间中的一个二阶微分算子
拉普拉斯的本质就是：梯度（∇I）的散度（∇·I） = div(∇I)
那么div(∇I/|∇I|) = 拉普拉斯/∇I
同时n = - ∇ø/|∇ø|，k = div(-n)
所以div(∇I/|∇I|) = 欧几里得曲率k

5. 假设您在视频中有一个快速移动的刚性对象，需要将其删除（修复）。 
以下哪项操作有望做好修复工作？注意，这是视频
应该是利用前后帧进行剪贴吧。然而这并不叫A cut-and-paste technique.
这里的Temporal 不是表示暂时，而是表示时间（跟spatial相对）！
另外两个选项叫做时间中值滤波和时间高斯/平均滤波器
那当然是时间中值滤波了

6. How would you detect scratches in an old movie, knowing they are vertical straight lines?
With the Hough transform √
With Wiener filtering 用于处理有噪声干扰的图像退化
With Mumford-Shah segmentation 用于图像分割

7. Assume the above scratches are a single pixel wide and appear in relatively uniform areas, how would you inpaint them?
一像素宽，出现在相对统一的区域
Simple linear interpolation √ 线性插值（这已经足够了）
Simple texture synthesis 纹理合成
PDE-based inpainting